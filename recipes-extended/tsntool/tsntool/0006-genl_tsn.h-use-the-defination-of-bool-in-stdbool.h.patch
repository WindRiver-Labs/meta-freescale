From 42539108bf9898b9af8b063aaf1163051fde9c03 Mon Sep 17 00:00:00 2001
From: Xiaolin He <xiaolin.he@nxp.com>
Date: Thu, 31 Oct 2019 19:01:03 +0800
Subject: [PATCH 06/15] genl_tsn.h: use the defination of bool in stdbool.h

It will result in compile error when other application load libtsn
and other libs including stdbool.h together.

Signed-off-by: Xiaolin He <xiaolin.he@nxp.com>
---
 include/tsn/genl_tsn.h |  6 +-----
 lib/tsnnl.c            |  4 ++--
 main/cmd.c             | 10 +++++-----
 3 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/include/tsn/genl_tsn.h b/include/tsn/genl_tsn.h
index 9ee5f6b..ae8d10b 100644
--- a/include/tsn/genl_tsn.h
+++ b/include/tsn/genl_tsn.h
@@ -13,6 +13,7 @@
 #include <linux/genetlink.h>
 #include <time.h>
 #include <cjson/cJSON.h>
+#include <stdbool.h>
 
 #define MAX_MSGSIZE 256
 #ifndef SOL_NETLINK
@@ -27,11 +28,6 @@ typedef unsigned char u8;
 typedef unsigned int u32;
 typedef unsigned short u16;
 
-typedef enum boolean {
-	FALSE,
-	TRUE,
-} bool;
-
 #define ptptime_t uint64_t
 #define NUM_THREADS 100
 
diff --git a/lib/tsnnl.c b/lib/tsnnl.c
index e496379..052c603 100644
--- a/lib/tsnnl.c
+++ b/lib/tsnnl.c
@@ -276,7 +276,7 @@ void get_para_from_json(int type, cJSON *json, void *para)
 
 #ifdef CONF_MONITOR
 #define TSN_MON_FILE "/tmp/tsn-oper-record.json"
-bool conf_monitor_switch = TRUE;
+bool conf_monitor_switch = true;
 
 void create_record(char *portname, int cmd, uint32_t index)
 {
@@ -406,7 +406,7 @@ int get_tsn_record(struct tsn_conf_record *record)
 	return 0;
 }
 #else
-bool conf_monitor_switch = FALSE;
+bool conf_monitor_switch = false;
 
 int get_tsn_record(struct tsn_conf_record *record)
 {
diff --git a/main/cmd.c b/main/cmd.c
index eb410ed..9238026 100644
--- a/main/cmd.c
+++ b/main/cmd.c
@@ -1836,9 +1836,9 @@ int cli_cmd_tsd_set(UNUSED int argc, UNUSED char *argv[], UNUSED int cmdnumber)
 	int c;
 	int ret;
 	int device = 0;
-	bool enable = TRUE;
+	bool enable = true;
 	uint32_t period = 0, frame_num = 0;
-	bool imme = FALSE;
+	bool imme = false;
 	struct option *long_options = &cli_commands[cmdnumber].long_options[0];
 	int option_index = 0;
 	char portname[IF_NAMESIZE];
@@ -1868,13 +1868,13 @@ int cli_cmd_tsd_set(UNUSED int argc, UNUSED char *argv[], UNUSED int cmdnumber)
 			frame_num = (uint32_t)strtoul(optarg, NULL, ret);
 			break;
 		case 'e':
-			enable = TRUE;
+			enable = true;
 			break;
 		case 'i':
-			imme = TRUE;
+			imme = true;
 			break;
 		case 'q':
-			enable = FALSE;
+			enable = false;
 			break;
 
 		default:
-- 
2.17.1

